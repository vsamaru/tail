{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","aria-label","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAyCeA,EAvCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACE,yBAAKC,UAAU,yFACb,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,yBAAKA,UAAU,cACb,yBAAKA,UAAU,uDAAf,YACYH,EAAMO,MAElB,4BACE,4BACE,2CACCP,EAAMQ,OAET,4BACE,+CACCR,EAAMS,WAET,4BACE,2CACCT,EAAMU,SAIb,yBAAKP,UAAU,aACZF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,0BACEC,IAAKD,EACLV,UAAU,0GAFZ,IAIIS,SCACG,EA/BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAQtC,OACE,yBAAKhB,UAAU,kDACb,0BAAMiB,SARO,SAACC,GAChBA,EAAEC,iBAEFN,EAAWE,IAKiBf,UAAU,mBAClC,yBAAKA,UAAU,mDACb,2BACEoB,SAAU,SAACF,GAAD,OAAOF,EAAQE,EAAEG,OAAOC,QAClCtB,UAAU,gHACVuB,KAAK,OACLC,YAAY,oBACZC,aAAW,kBAEb,4BACEzB,UAAU,0LACVuB,KAAK,UAFP,cCoBKG,MArCf,WAAgB,IAAD,EACeZ,mBAAS,IADxB,mBACNa,EADM,KACEC,EADF,OAGqBd,oBAAS,GAH9B,mBAGNe,EAHM,KAGKC,EAHL,OAIWhB,mBAAS,IAJpB,mBAINiB,EAJM,KAIAC,EAJA,KAkBb,OAZAC,qBAAU,WACRC,MAAM,gCAAD,OAC6BC,qCAD7B,cACwEJ,EADxE,kCAGFK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACX,IAGF,yBAAK/B,UAAU,qBACb,kBAAC,EAAD,CAAaa,WAAY,SAACE,GAAD,OAAUiB,EAAQjB,OACzCc,GAA+B,IAAlBF,EAAOkB,QACpB,wBAAI7C,UAAU,sCAAd,mBAED6B,EACC,wBAAI7B,UAAU,sCAAd,cAEA,yBAAKA,UAAU,mDACZ2B,EAAOnB,KAAI,SAACX,GAAD,OACV,kBAAC,EAAD,CAAWc,IAAKd,EAAMiD,GAAIjD,MAAOA,UC5B7CkD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.362996ce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ImageCard = ({ image }) => {\r\n  const tags = image.tags.split(\",\");\r\n\r\n  return (\r\n    <div className=\"max-w-sm m-2 rounded overflow-hidden shadow-lg bg-gray-800 text-white text-opacity-75\">\r\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n      <div className=\"px-6 py-4 \">\r\n        <div className=\"font-bold text-teal-400 text-opacity-1 text-xl mb-2\">\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n          <span\r\n            key={index}\r\n            className=\"inline-block bg-teal-200 bg-opacity-75 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\"\r\n          >\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    searchText(text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"flex items-center border-b border-teal-200 py-2\">\r\n          <input\r\n            onChange={(e) => setText(e.target.value)}\r\n            className=\"appearance-none bg-transparent border-none w-full text-white mr-3 py-1 px-2 leading-tight focus:outline-none \"\r\n            type=\"text\"\r\n            placeholder=\"Search Image Term\"\r\n            aria-label=\"Search Images\"\r\n          />\r\n          <button\r\n            className=\"flex-shrink-0 bg-teal-200 hover:bg-teal-800 hover:bg-opacity-75 border-teal-200 hover:border-white focus:outline-none text-sm border-4 text-gray-800 hover:text-white py-1 px-2 rounded\"\r\n            type=\"submit\"\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport ImageSearch from \"./components/ImageSearch\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n      {!isLoading && images.length === 0 && (\n        <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1>\n      )}\n      {isLoading ? (\n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1>\n      ) : (\n        <div className=\"grid m-2 lg:grid-cols-3 md:grid-cols-2 md:gap-4\">\n          {images.map((image) => (\n            <ImageCard key={image.id} image={image}></ImageCard>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}